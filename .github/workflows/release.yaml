name: Publish Docker image

on:
  push:
    branches:
      - 'main'
    tags:
      - "v*.*.*"

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

#      - name: Prepare
#        id: prep
#        run: |
#          DOCKER_IMAGE=iangregsondev/sometest
#          VERSION=edge
#          if [[ $GITHUB_REF == refs/tags/* ]]; then
#            VERSION=${GITHUB_REF#refs/tags/v}
#          fi
#          if [ "${{ github.event_name }}" = "schedule" ]; then
#            VERSION=nightly
#          fi
#          TAGS="${DOCKER_IMAGE}:${VERSION}"
#          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
#            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
#          fi
#          echo ::set-output name=tags::${TAGS}

      - name: Docker meta
        id: meta
        uses: crazy-max/ghaction-docker-meta@v2
        with:
          # list of Docker images to use as base name for tags
          images: ${{ secrets.DOCKER_IMAGE }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
#          tags: ${{ steps.prep.outputs.tags }}
#          labels: its-me, its-not-me

      - name: Test
        env:
          TEST_SECRET: ${{ secrets.DOCKERHUB_USERNAME }}
          TEST_SECRETA: ${{ secrets.DOCKER_IMAGE }}
        run: |
          echo ${#TEST_SECRET}
          echo ${#TEST_SECRETA}

#      - name: Update repo description
#        uses: peter-evans/dockerhub-description@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}
#          repository: ${{ secrets.DOCKER_IMAGE }}
#          short-description: ${{ github.event.repository.description }}